!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardElement.querySelector(".card__description-text").textContent=this._name,this._cardElement}}var t=class{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){return e.validity.valid?this._hideInputError(e):this._showInputError(e)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(e){e.classList.remove(this._inactiveButtonClass),e.disabled=!1}resetValidation(){this._toggleButtonState(this._inputEls,this._submitButton),this._inputEls.forEach((e=>{this._hideInputError(e)}))}_toggleButtonState(e,t){this._hasValidInput(e)?this._enableButton(this._submitButton):this.disableButton()}_hasValidInput(e){return e.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(this._inputEls,this._submitButton),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputEls,this._submitButton)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=document.querySelector(".modal__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_open")||e.target.classList.contains("modal__close-button"))&&this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=Array.from(this._popupForm.querySelectorAll(".modal__input"))}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset(),this.close()}))}}const i=document.querySelector(".profile__edit-button"),o=(document.querySelector("#profile-edit-modal"),document.querySelector(".profile__title")),r=document.querySelector(".profile__description"),a=(document.querySelector(".modal__input_type_name"),document.querySelector(".modal__input_type_description"),document.querySelector(".cards__list"),document.querySelector(".profile__add-button")),l=(document.querySelector("#newcards"),document.querySelector(".modal__input_type_title"),document.querySelector(".modal__input_type_link"),{}),c=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._previewImage=this._popupElement.querySelector(".modal__image-preview"),this._previewImageTitle=this._popupElement.querySelector(".modal__title-preview")}open(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this._previewImage.src=t,this._previewImage.alt=e,this._previewImageTitle.textContent=e,super.open()}}({popupSelector:"#preview"});c.setEventListeners();const u=new n("#profile-edit-modal",(function(e){p.setUserInfo(e),u.close()}));u.setEventListeners();const _=new n("#newcards",(function(e){h(e),l["newcard-form"].disableButton()}));function d(e,t){c.open(e,t)}_.setEventListeners();const m=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._element=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._element.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:h},".cards__list"),p=new class{constructor(e,t){this._displayedName=e,this._displayedDescription=t}getUserInfo(){return{name:this._displayedName.textContent,description:this._displayedDescription.textContent}}setUserInfo(e){this._displayedName.textContent=e.name,this._displayedDescription.textContent=e.description}}(o,r);function h(t){const s=new e(t,"#jscard-template",d).getView();m.addItem(s)}var E;m.renderItems(),i.addEventListener("click",(()=>{const e=p.getUserInfo();u.setInputValues(e),l["profile-form"].resetValidation(),u.open()})),a.addEventListener("click",(()=>{_.open()})),E={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(E.formSelector)).forEach((e=>{const s=new t(E,e),n=e.getAttribute("id");l[n]=s,s.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,