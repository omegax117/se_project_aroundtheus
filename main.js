!function(){"use strict";class e{constructor(e,t,s,i,r){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s,this.id=e._id,this._handleDeleteCard=i,this._handleLikeCard=r,this._isLiked=e.isLiked||!1}getCardId(){return this.id}getIsLiked(){return this._isLiked}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeCard(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}setIsLiked(e){this._isLiked=e,this._renderLikes()}_renderLikes(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._renderLikes(this._likeButton),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardElement.querySelector(".card__description-text").textContent=this._name,this._cardElement}}var t=class{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){return e.validity.valid?this._hideInputError(e):this._showInputError(e)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(e){e.classList.remove(this._inactiveButtonClass),e.disabled=!1}resetValidation(){this._toggleButtonState(this._inputEls,this._submitButton),this._inputEls.forEach((e=>{this._hideInputError(e)}))}_toggleButtonState(e,t){this._hasValidInput(e)?this._enableButton(this._submitButton):this.disableButton()}_hasValidInput(e){return e.every((e=>e.validity.valid))}_setEventListeners(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(this._inputEls,this._submitButton),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputEls,this._submitButton)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=document.querySelector(".modal__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_open")||e.target.classList.contains("modal__close-button"))&&this.close()}))}}class i extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=Array.from(this._popupForm.querySelectorAll(".modal__input")),this._submitButton=this._popupForm.querySelector(".modal__save-button"),this._submitButtonText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}reset(){this._popupForm.reset(),this.close()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const r=document.querySelector(".profile__edit-button"),n=(document.querySelector("#profile-edit-modal"),document.querySelector(".profile__title")),o=document.querySelector(".profile__description"),a=(document.querySelector(".modal__input_type_name"),document.querySelector(".modal__input_type_description"),document.querySelector(".cards__list"),document.querySelector(".profile__add-button")),l=(document.querySelector("#newcards"),document.querySelector(".modal__input_type_title"),document.querySelector(".modal__input_type_link"),{}),d=document.querySelector("#profilePicture"),u=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._previewImage=this._popupElement.querySelector(".modal__image-preview"),this._previewImageTitle=this._popupElement.querySelector(".modal__title-preview")}open(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this._previewImage.src=t,this._previewImage.alt=e,this._previewImageTitle.textContent=e,super.open()}}({popupSelector:"#preview"});u.setEventListeners();const h=new i("#profile-edit-modal",(function(e){L((function(){return p.editUserData(e).then((e=>{E.modifyUserInfo(e)}))}),h)}));h.setEventListeners();const c=new i("#newcards",(function(e){L((function(){return p.addNewCard(e).then((e=>{v(e),l["newcard-form"].disableButton()}))}),c)}));c.setEventListeners();const _=new i("#pfpEdit",(function(e){L((function(){return p.editPfp(e).then((e=>{E.setUserPfp({avatar:e.avatar})}))}),_)}));_.setEventListeners();const m=new class extends s{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector(".modal__save-button"),this._submitButtonText=this._submitButton.textContent}handleConfirm(e){this._handleConfirmSubmit=e}open(e,t){this._currentCard=e,this._cardId=t,super.open()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleConfirmSubmit()}))}showLoading(e){this._submitButton.textContent=e?"Loading...":"YES"}renderLoading(e,t="Saving..."){this._submitButton.textContent=e?t:this._submitButtonText}}("#confirm");m.setEventListeners();const p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getUserData(){return this._request(`${this.baseUrl}/users/me`,{method:"GET",headers:this._headers})}editUserData(e){return this._request(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.description})})}editPfp(e){return this._request(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})})}getInitialCards(){return this._request(`${this.baseUrl}/cards`,{method:"GET",headers:this._headers})}addNewCard(e){return this._request(`${this.baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})})}addLike(e){return this._request(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}removeLike(e){return this._request(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}deleteCard(e){return this._request(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"8d3dab07-3d12-4401-9299-225a306c1793","Content-Type":"application/json"}}),E=new class{constructor(e,t,s){this._displayedName=e,this._displayedDescription=t,this._pfpElement=s}getUserInfo(){return{name:this._displayedName.textContent,description:this._displayedDescription.textContent}}setUserInfo(e){this._displayedName.textContent=e.name,this._displayedDescription.textContent=e.description}modifyUserInfo(e){this._displayedName.textContent=e.name,this._displayedDescription.textContent=e.about}setUserPfp(e){this._pfpElement.src=e.avatar}}(n,o,d);function v(t){const s=new e(t,"#jscard-template",S,b,y).getView();f.addItem(s)}p.getInitialCards().then((e=>{const t=e.map((e=>v(e)));f.renderItems(t)})).catch((e=>{console.error(e)}));const f=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._element=document.querySelector(t)}renderItems(e){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._element.prepend(e)}}({items:[],renderer:v},".cards__list");function b(e){m.open(),m.handleConfirm((()=>{m.renderLoading(!0),p.deleteCard(e.getCardId()).then((()=>{e.handleDeleteCard(),m.close()})).catch((e=>{console.error(e)})).finally((()=>{m.renderLoading(!1)}))}))}function L(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.renderLoading(!0,s),e().then((()=>{t.close()})).catch(console.error).finally((()=>{t.renderLoading(!1)}))}function S(e,t){u.open(e,t)}function y(e){e.getIsLiked()?p.removeLike(e.getCardId()).then((()=>{e.setIsLiked(!1)})).catch((e=>{console.error(e)})):p.addLike(e.getCardId()).then((()=>{e.setIsLiked(!0)})).catch(console.error)}var g;p.getUserData().then((e=>{E.setUserInfo({name:e.name,description:e.about}),E.setUserPfp({avatar:e.avatar})})).catch((e=>{console.error(e)})),r.addEventListener("click",(()=>{const e=E.getUserInfo();h.setInputValues(e),l["profile-form"].resetValidation(),h.open()})),a.addEventListener("click",(()=>{c.open()})),d.addEventListener("click",(()=>{_.open()})),g={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(g.formSelector)).forEach((e=>{const s=new t(g,e),i=e.getAttribute("id");l[i]=s,s.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,